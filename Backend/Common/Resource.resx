<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="10001_DESCRIPTION" xml:space="preserve">
    <value>User Is Not Authorised To Proceed</value>
  </data>
  <data name="10001_SOLUTION" xml:space="preserve">
    <value>Please Verify With Correct User Credentials</value>
  </data>
  <data name="10002_DESCRIPTION" xml:space="preserve">
    <value>User Is Not Found Or User Is Not A Registered User</value>
  </data>
  <data name="10002_SOLUTION" xml:space="preserve">
    <value>Please Login With Existing User or Regester A New User</value>
  </data>
  <data name="10003_DESCRIPTION" xml:space="preserve">
    <value>User is Not Allowed To Access The Content</value>
  </data>
  <data name="10003_SOLUTION" xml:space="preserve">
    <value>Please Try Again With User With Appropiate Permissions</value>
  </data>
  <data name="10004_DESCRIPTION" xml:space="preserve">
    <value>User already exists with this username or email</value>
  </data>
  <data name="10004_SOLUTION" xml:space="preserve">
    <value>Please provide an username or email that is not registered yet</value>
  </data>
  <data name="100_DESCRIPTION" xml:space="preserve">
    <value>Some Unknown Error Occured</value>
  </data>
  <data name="100_SOLUTION" xml:space="preserve">
    <value>Please Debug Through Code To Solve The Issue</value>
  </data>
  <data name="101_DESCRIPTION" xml:space="preserve">
    <value>Cannot Validate Request</value>
  </data>
  <data name="101_SOLUTION" xml:space="preserve">
    <value>Please Verify The Request And Try Again With Proper Inputs</value>
  </data>
  <data name="20001_DESCRIPTION" xml:space="preserve">
    <value>Group Is Not Found Or Group Is Not Yet Created</value>
  </data>
  <data name="20001_SOLUTION" xml:space="preserve">
    <value>Please Create A New Group Or Enter An Existing Group</value>
  </data>
  <data name="20002_DESCRIPTION" xml:space="preserve">
    <value>Group already exists with this name</value>
  </data>
  <data name="20002_SOLUTION" xml:space="preserve">
    <value>Please provide an group name that is not yet taken</value>
  </data>
  <data name="30001_DESCRIPTION" xml:space="preserve">
    <value>Expense is not found or expense is not yet created</value>
  </data>
  <data name="30001_SOLUTION" xml:space="preserve">
    <value>Please create a new expense or enter an existing expense</value>
  </data>
  <data name="40001_DESCRIPTION" xml:space="preserve">
    <value>Approval already exists for the expense</value>
  </data>
  <data name="40001_SOLUTION" xml:space="preserve">
    <value>Please create a new approval</value>
  </data>
  <data name="ErrApprovalAlreadyExists" xml:space="preserve">
    <value>40001:Already Exists</value>
  </data>
  <data name="ErrExpenseNotFound" xml:space="preserve">
    <value>30001:Not Found</value>
  </data>
  <data name="ErrGroupAlreadyExists" xml:space="preserve">
    <value>20002:Already Exists</value>
  </data>
  <data name="ErrGroupNotFound" xml:space="preserve">
    <value>20001:Not Found</value>
  </data>
  <data name="ErrUnknown" xml:space="preserve">
    <value>100:Unknown Error</value>
  </data>
  <data name="ErrUserAlreadyExists" xml:space="preserve">
    <value>10004:Already Exists</value>
  </data>
  <data name="ErrUserForbidden" xml:space="preserve">
    <value>10003:User Forbidden</value>
  </data>
  <data name="ErrUserNotAuthorized" xml:space="preserve">
    <value>10001:Authentication Error</value>
  </data>
  <data name="ErrUserNotFound" xml:space="preserve">
    <value>10002:Not Found</value>
  </data>
  <data name="ErrValidationFailed" xml:space="preserve">
    <value>101:Validation Failed</value>
  </data>
</root>